{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import'./AchievementCard.css';export default function AchievementCard(_ref){var cardInfo=_ref.cardInfo,isDark=_ref.isDark;function openUrlInNewTab(url){var win=window.open(url,'_blank');win.focus();}return/*#__PURE__*/_jsxs(\"div\",{className:isDark?'dark-mode certificate-card':'certificate-card',children:[/*#__PURE__*/_jsx(\"div\",{className:\"certificate-image-div\",children:/*#__PURE__*/_jsx(\"img\",{src:cardInfo.image.default,alt:\"PWA\",className:\"card-image\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"certificate-detail-div\",children:[/*#__PURE__*/_jsx(\"h5\",{className:isDark?'dark-mode card-title':'card-title',children:cardInfo.title}),/*#__PURE__*/_jsx(\"p\",{className:isDark?'dark-mode card-subtitle':'card-subtitle',children:cardInfo.description})]}),/*#__PURE__*/_jsx(\"div\",{className:\"certificate-card-footer\",children:cardInfo.footer.map(function(v,i){return/*#__PURE__*/_jsx(\"span\",{className:isDark?'dark-mode certificate-tag':'certificate-tag',onClick:function onClick(){return openUrlInNewTab(v.url);},children:v.name},i);})})]});}","map":{"version":3,"sources":["/home/teky/src/tekyloFolio/src/components/achievementCard/AchievementCard.js"],"names":["React","AchievementCard","cardInfo","isDark","openUrlInNewTab","url","win","window","open","focus","image","default","title","description","footer","map","v","i","name"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,uBAAP,CAEA,cAAe,SAASC,CAAAA,eAAT,MAA+C,IAApBC,CAAAA,QAAoB,MAApBA,QAAoB,CAAVC,MAAU,MAAVA,MAAU,CAC5D,QAASC,CAAAA,eAAT,CAAyBC,GAAzB,CAA8B,CAC5B,GAAMC,CAAAA,GAAG,CAAGC,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAAiB,QAAjB,CAAZ,CACAC,GAAG,CAACG,KAAJ,GACD,CAED,mBACE,aAAK,SAAS,CAAEN,MAAM,CAAG,4BAAH,CAAkC,kBAAxD,wBACE,YAAK,SAAS,CAAC,uBAAf,uBACE,YAAK,GAAG,CAAED,QAAQ,CAACQ,KAAT,CAAeC,OAAzB,CAAkC,GAAG,CAAC,KAAtC,CAA4C,SAAS,CAAC,YAAtD,EADF,EADF,cAIE,aAAK,SAAS,CAAC,wBAAf,wBACE,WAAI,SAAS,CAAER,MAAM,CAAG,sBAAH,CAA4B,YAAjD,UACGD,QAAQ,CAACU,KADZ,EADF,cAIE,UAAG,SAAS,CAAET,MAAM,CAAG,yBAAH,CAA+B,eAAnD,UACGD,QAAQ,CAACW,WADZ,EAJF,GAJF,cAYE,YAAK,SAAS,CAAC,yBAAf,UACGX,QAAQ,CAACY,MAAT,CAAgBC,GAAhB,CAAoB,SAACC,CAAD,CAAIC,CAAJ,qBACnB,aAEE,SAAS,CAAEd,MAAM,CAAG,2BAAH,CAAiC,iBAFpD,CAGE,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAACY,CAAC,CAACX,GAAH,CAArB,EAHX,UAKGW,CAAC,CAACE,IALL,EACOD,CADP,CADmB,EAApB,CADH,EAZF,GADF,CA0BD","sourcesContent":["import React from 'react';\nimport './AchievementCard.css';\n\nexport default function AchievementCard({ cardInfo, isDark }) {\n  function openUrlInNewTab(url) {\n    const win = window.open(url, '_blank');\n    win.focus();\n  }\n\n  return (\n    <div className={isDark ? 'dark-mode certificate-card' : 'certificate-card'}>\n      <div className=\"certificate-image-div\">\n        <img src={cardInfo.image.default} alt=\"PWA\" className=\"card-image\" />\n      </div>\n      <div className=\"certificate-detail-div\">\n        <h5 className={isDark ? 'dark-mode card-title' : 'card-title'}>\n          {cardInfo.title}\n        </h5>\n        <p className={isDark ? 'dark-mode card-subtitle' : 'card-subtitle'}>\n          {cardInfo.description}\n        </p>\n      </div>\n      <div className=\"certificate-card-footer\">\n        {cardInfo.footer.map((v, i) => (\n          <span\n            key={i}\n            className={isDark ? 'dark-mode certificate-tag' : 'certificate-tag'}\n            onClick={() => openUrlInNewTab(v.url)}\n          >\n            {v.name}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}