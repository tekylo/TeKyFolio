{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = supportsPassiveEvents;\n/**\n * Used to detect browser support for adding an event listener with options\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Improving_scrolling_performance_with_passive_listeners\n * @returns Boolean\n */\n\nfunction supportsPassiveEvents() {\n  var passiveSupported = false;\n\n  try {\n    var options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (err) {\n    passiveSupported = false;\n  }\n\n  return passiveSupported;\n}","map":{"version":3,"sources":["/home/teky/src/tekyloFolio/node_modules/react-headroom/dist/supportsPassiveEvents.js"],"names":["Object","defineProperty","exports","value","default","supportsPassiveEvents","passiveSupported","options","passive","window","addEventListener","removeEventListener","err"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,qBAAlB;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,qBAAT,GAAiC;AAC/B,MAAIC,gBAAgB,GAAG,KAAvB;;AAEA,MAAI;AACF,QAAIC,OAAO,GAAG;AACZ,UAAIC,OAAJ,GAAc;AACZ;AACA;AACAF,QAAAA,gBAAgB,GAAG,IAAnB;AACA,eAAO,KAAP;AACD;;AANW,KAAd;AASAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,IAAhC,EAAsCH,OAAtC;AACAE,IAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmC,IAAnC,EAAyCJ,OAAzC;AACD,GAZD,CAYE,OAAOK,GAAP,EAAY;AACZN,IAAAA,gBAAgB,GAAG,KAAnB;AACD;;AAED,SAAOA,gBAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = supportsPassiveEvents;\n/**\n * Used to detect browser support for adding an event listener with options\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Improving_scrolling_performance_with_passive_listeners\n * @returns Boolean\n */\nfunction supportsPassiveEvents() {\n  var passiveSupported = false;\n\n  try {\n    var options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    };\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (err) {\n    passiveSupported = false;\n  }\n\n  return passiveSupported;\n}"]},"metadata":{},"sourceType":"script"}