{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/teky/src/tekyloFolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,createRef}from'react';import'./ExperienceCard.css';import ColorThief from'colorthief';export default function ExperienceCard(_ref){var cardInfo=_ref.cardInfo,isDark=_ref.isDark;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),colorArrays=_useState2[0],setColorArrays=_useState2[1];var imgRef=/*#__PURE__*/createRef();function getColorArrays(){var colorThief=new ColorThief();setColorArrays(colorThief.getColor(imgRef.current));}function rgb(values){return typeof values==='undefined'?null:\"rgb(\".concat(values.join(', '),\")\");}var GetDescBullets=function GetDescBullets(_ref2){var descBullets=_ref2.descBullets,isDark=_ref2.isDark;return descBullets?descBullets.map(function(item,i){return/*#__PURE__*/_jsx(\"li\",{className:isDark?'subTitle dark-mode-text':'subTitle',children:item},i);}):null;};return/*#__PURE__*/_jsxs(\"div\",{className:isDark?'experience-card-dark':'experience-card',children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:rgb(colorArrays)},className:\"experience-banner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"experience-blurred_div\"}),/*#__PURE__*/_jsx(\"div\",{className:\"experience-div-company\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"experience-text-company\",children:cardInfo.company})}),/*#__PURE__*/_jsx(\"img\",{crossOrigin:\"anonymous\",ref:imgRef,className:\"experience-roundedimg\",src:cardInfo.companylogo.default,alt:cardInfo.company,onLoad:function onLoad(){return getColorArrays();}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"experience-text-details\",children:[/*#__PURE__*/_jsx(\"h5\",{className:isDark?'experience-text-role dark-mode-text':'experience-text-role',children:cardInfo.role}),/*#__PURE__*/_jsx(\"h5\",{className:isDark?'experience-text-date dark-mode-text':'experience-text-date',children:cardInfo.date}),/*#__PURE__*/_jsx(\"p\",{className:isDark?'subTitle experience-text-desc dark-mode-text':'subTitle experience-text-desc',children:cardInfo.desc}),/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsx(GetDescBullets,{descBullets:cardInfo.descBullets,isDark:isDark})})]})]});}","map":{"version":3,"sources":["/home/teky/src/tekyloFolio/src/components/experienceCard/ExperienceCard.js"],"names":["React","useState","useEffect","createRef","ColorThief","ExperienceCard","cardInfo","isDark","colorArrays","setColorArrays","imgRef","getColorArrays","colorThief","getColor","current","rgb","values","join","GetDescBullets","descBullets","map","item","i","background","company","companylogo","default","role","date","desc"],"mappings":"yOAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,MAAO,sBAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,cAAe,SAASC,CAAAA,cAAT,MAA8C,IAApBC,CAAAA,QAAoB,MAApBA,QAAoB,CAAVC,MAAU,MAAVA,MAAU,eACrBN,QAAQ,CAAC,EAAD,CADa,wCACpDO,WADoD,eACvCC,cADuC,eAE3D,GAAMC,CAAAA,MAAM,cAAGP,SAAS,EAAxB,CAEA,QAASQ,CAAAA,cAAT,EAA0B,CACxB,GAAMC,CAAAA,UAAU,CAAG,GAAIR,CAAAA,UAAJ,EAAnB,CACAK,cAAc,CAACG,UAAU,CAACC,QAAX,CAAoBH,MAAM,CAACI,OAA3B,CAAD,CAAd,CACD,CAED,QAASC,CAAAA,GAAT,CAAaC,MAAb,CAAqB,CACnB,MAAO,OAAOA,CAAAA,MAAP,GAAkB,WAAlB,CAAgC,IAAhC,eAA8CA,MAAM,CAACC,IAAP,CAAY,IAAZ,CAA9C,KAAP,CACD,CAED,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,WAAGC,CAAAA,WAAH,OAAGA,WAAH,CAAgBZ,MAAhB,OAAgBA,MAAhB,OAA8BY,CAAAA,WAAW,CAAGA,WAAW,CAACC,GAAZ,CAAgB,SAACC,IAAD,CAAOC,CAAP,qBAAa,WAAY,SAAS,CAAEf,MAAM,CAAG,yBAAH,CAA+B,UAA5D,UAAyEc,IAAzE,EAASC,CAAT,CAAb,EAAhB,CAAH,CAAuH,IAAhK,EAAvB,CAEA,mBACE,aAAK,SAAS,CAAEf,MAAM,CAAG,sBAAH,CAA4B,iBAAlD,wBACE,aAAK,KAAK,CAAE,CAAEgB,UAAU,CAAER,GAAG,CAACP,WAAD,CAAjB,CAAZ,CAA8C,SAAS,CAAC,mBAAxD,wBACE,YAAK,SAAS,CAAC,wBAAf,EADF,cAEE,YAAK,SAAS,CAAC,wBAAf,uBACE,WAAI,SAAS,CAAC,yBAAd,UAAyCF,QAAQ,CAACkB,OAAlD,EADF,EAFF,cAME,YAAK,WAAW,CAAC,WAAjB,CAA6B,GAAG,CAAEd,MAAlC,CAA0C,SAAS,CAAC,uBAApD,CAA4E,GAAG,CAAEJ,QAAQ,CAACmB,WAAT,CAAqBC,OAAtG,CAA+G,GAAG,CAAEpB,QAAQ,CAACkB,OAA7H,CAAsI,MAAM,CAAE,wBAAMb,CAAAA,cAAc,EAApB,EAA9I,EANF,GADF,cASE,aAAK,SAAS,CAAC,yBAAf,wBACE,WAAI,SAAS,CAAEJ,MAAM,CAAG,qCAAH,CAA2C,sBAAhE,UAAyFD,QAAQ,CAACqB,IAAlG,EADF,cAEE,WAAI,SAAS,CAAEpB,MAAM,CAAG,qCAAH,CAA2C,sBAAhE,UAAyFD,QAAQ,CAACsB,IAAlG,EAFF,cAGE,UAAG,SAAS,CAAErB,MAAM,CAAG,8CAAH,CAAoD,+BAAxE,UAA0GD,QAAQ,CAACuB,IAAnH,EAHF,cAIE,iCACE,KAAC,cAAD,EAAgB,WAAW,CAAEvB,QAAQ,CAACa,WAAtC,CAAmD,MAAM,CAAEZ,MAA3D,EADF,EAJF,GATF,GADF,CAoBD","sourcesContent":["import React, { useState, useEffect, createRef } from 'react';\nimport './ExperienceCard.css';\nimport ColorThief from 'colorthief';\n\nexport default function ExperienceCard({ cardInfo, isDark }) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === 'undefined' ? null : `rgb(${values.join(', ')})`;\n  }\n\n  const GetDescBullets = ({ descBullets, isDark }) => (descBullets ? descBullets.map((item, i) => <li key={i} className={isDark ? 'subTitle dark-mode-text' : 'subTitle'}>{item}</li>) : null);\n\n  return (\n    <div className={isDark ? 'experience-card-dark' : 'experience-card'}>\n      <div style={{ background: rgb(colorArrays) }} className=\"experience-banner\">\n        <div className=\"experience-blurred_div\" />\n        <div className=\"experience-div-company\">\n          <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\n        </div>\n\n        <img crossOrigin=\"anonymous\" ref={imgRef} className=\"experience-roundedimg\" src={cardInfo.companylogo.default} alt={cardInfo.company} onLoad={() => getColorArrays()} />\n      </div>\n      <div className=\"experience-text-details\">\n        <h5 className={isDark ? 'experience-text-role dark-mode-text' : 'experience-text-role'}>{cardInfo.role}</h5>\n        <h5 className={isDark ? 'experience-text-date dark-mode-text' : 'experience-text-date'}>{cardInfo.date}</h5>\n        <p className={isDark ? 'subTitle experience-text-desc dark-mode-text' : 'subTitle experience-text-desc'}>{cardInfo.desc}</p>\n        <ul>\n          <GetDescBullets descBullets={cardInfo.descBullets} isDark={isDark} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}