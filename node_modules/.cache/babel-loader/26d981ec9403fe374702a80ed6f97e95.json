{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/teky/src/tekyloFolio/src/containers/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, lazy, Suspense } from 'react';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport { openSource } from '../../portfolio';\nimport Contact from '../contact/Contact';\nimport Loading from '../loading/Loading';\n\nconst renderLoader = () => /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 28\n}, this);\n\nconst GithubProfileCard = /*#__PURE__*/lazy(_c = () => import('../../components/githubProfileCard/GithubProfileCard'));\n_c2 = GithubProfileCard;\nexport default function Profile() {\n  _s();\n\n  const [prof, setrepo] = useState([]);\n\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n\n  function getProfileData() {\n    const client = new ApolloClient({\n      uri: 'https://api.github.com/graphql',\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`\n          }\n        });\n      }\n    });\n    client.query({\n      query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `\n    }).then(result => {\n      setProfileFunction(result.data.user);\n    }).catch(error => {\n      console.log(error);\n      setProfileFunction('Error');\n      console.log('Because of this Error Contact Section is Showed instead of Profile');\n      openSource.showGithubProfile = 'false';\n    });\n  }\n\n  useEffect(() => {\n    if (openSource.showGithubProfile === 'true') {\n      getProfileData();\n    }\n  }, []);\n\n  if (openSource.display && openSource.showGithubProfile === 'true' && !(typeof prof === 'string' || prof instanceof String)) {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: renderLoader(),\n      children: /*#__PURE__*/_jsxDEV(GithubProfileCard, {\n        prof: prof\n      }, prof.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Profile, \"lAz1P4fDh/stiO6z/CdsuYyy3Bg=\");\n\n_c3 = Profile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GithubProfileCard$lazy\");\n$RefreshReg$(_c2, \"GithubProfileCard\");\n$RefreshReg$(_c3, \"Profile\");","map":{"version":3,"sources":["/home/teky/src/tekyloFolio/src/containers/profile/Profile.js"],"names":["React","useState","useEffect","lazy","Suspense","ApolloClient","gql","openSource","Contact","Loading","renderLoader","GithubProfileCard","Profile","prof","setrepo","setProfileFunction","array","getProfileData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","data","user","catch","error","console","log","showGithubProfile","display","String","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IACEC,QADF,EACYC,SADZ,EACuBC,IADvB,EAC6BC,QAD7B,QAEO,OAFP;AAGA,OAAOC,YAAP,IAAuBC,GAAvB,QAAkC,cAAlC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,YAAY,GAAG,mBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,QAA3B;;AACA,MAAMC,iBAAiB,gBAAGR,IAAI,MAAC,MAAM,OAAO,sDAAP,CAAP,CAA9B;MAAMQ,iB;AACN,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AACA,WAASc,kBAAT,CAA4BC,KAA5B,EAAmC;AACjCF,IAAAA,OAAO,CAACE,KAAD,CAAP;AACD;;AACD,WAASC,cAAT,GAA0B;AACxB,UAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,MAAAA,GAAG,EAAE,gCADyB;AAE9BC,MAAAA,OAAO,EAAGC,SAAD,IAAe;AACtBA,QAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAG,UAASjB,UAAU,CAACkB,oBAAqB;AADlD;AADU,SAArB;AAKD;AAR6B,KAAjB,CAAf;AAWAP,IAAAA,MAAM,CACHQ,KADH,CACS;AACLA,MAAAA,KAAK,EAAEpB,GAAI;AACnB;AACA,sBAAsBC,UAAU,CAACoB,cAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXa,KADT,EAcGC,IAdH,CAcSC,MAAD,IAAY;AAChBd,MAAAA,kBAAkB,CAACc,MAAM,CAACC,IAAP,CAAYC,IAAb,CAAlB;AACD,KAhBH,EAiBGC,KAjBH,CAiBUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAlB,MAAAA,kBAAkB,CAAC,OAAD,CAAlB;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAY,oEAAZ;AACA5B,MAAAA,UAAU,CAAC6B,iBAAX,GAA+B,OAA/B;AACD,KAtBH;AAuBD;;AACDlC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,UAAU,CAAC6B,iBAAX,KAAiC,MAArC,EAA6C;AAC3CnB,MAAAA,cAAc;AACf;AACF,GAJQ,EAIN,EAJM,CAAT;;AAKA,MAAIV,UAAU,CAAC8B,OAAX,IAAsB9B,UAAU,CAAC6B,iBAAX,KAAiC,MAAvD,IAAiE,EAAE,OAAOvB,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,YAAYyB,MAA9C,CAArE,EAA4H;AAC1H,wBACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE5B,YAAY,EAAhC;AAAA,6BACE,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAEG;AAAzB,SAAoCA,IAAI,CAAC0B,EAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAtDuB3B,O;;MAAAA,O","sourcesContent":["import React, {\n  useState, useEffect, lazy, Suspense,\n} from 'react';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport { openSource } from '../../portfolio';\nimport Contact from '../contact/Contact';\nimport Loading from '../loading/Loading';\n\nconst renderLoader = () => <Loading />;\nconst GithubProfileCard = lazy(() => import('../../components/githubProfileCard/GithubProfileCard'));\nexport default function Profile() {\n  const [prof, setrepo] = useState([]);\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n  function getProfileData() {\n    const client = new ApolloClient({\n      uri: 'https://api.github.com/graphql',\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `,\n      })\n      .then((result) => {\n        setProfileFunction(result.data.user);\n      })\n      .catch((error) => {\n        console.log(error);\n        setProfileFunction('Error');\n        console.log('Because of this Error Contact Section is Showed instead of Profile');\n        openSource.showGithubProfile = 'false';\n      });\n  }\n  useEffect(() => {\n    if (openSource.showGithubProfile === 'true') {\n      getProfileData();\n    }\n  }, []);\n  if (openSource.display && openSource.showGithubProfile === 'true' && !(typeof prof === 'string' || prof instanceof String)) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <GithubProfileCard prof={prof} key={prof.id} />\n      </Suspense>\n    );\n  }\n  return <Contact />;\n}\n"]},"metadata":{},"sourceType":"module"}