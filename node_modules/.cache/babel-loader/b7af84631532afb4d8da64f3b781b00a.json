{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/teky/src/tekyloFolio/src/containers/projects/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, Suspense, lazy } from 'react';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport './Project.css';\nimport Button from '../../components/button/Button';\nimport { openSource, socialMediaLinks } from '../../portfolio';\nimport StyleContext from '../../contexts/StyleContext';\nimport Loading from '../loading/Loading';\nexport default function Projects() {\n  _s();\n\n  const GithubRepoCard = /*#__PURE__*/lazy(() => import('../../components/githubRepoCard/GithubRepoCard'));\n\n  const FailedLoading = () => null;\n\n  const renderLoader = () => /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 30\n  }, this);\n\n  const [repo, setrepo] = useState([]); // todo: remove useContex because is not supported\n\n  const {\n    isDark\n  } = useContext(StyleContext);\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: 'https://api.github.com/graphql',\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`\n          }\n        });\n      }\n    });\n    client.query({\n      query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `\n    }).then(result => {\n      setrepoFunction(result.data.user.pinnedItems.edges); // console.log(result);\n    }).catch(error => {\n      console.log(error);\n      setrepoFunction('Error');\n      console.log('Because of this Error, nothing is shown in place of Projects section. Projects section not configured');\n    });\n  }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  if (!(typeof repo === 'string' || repo instanceof String) && openSource.display) {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: renderLoader(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        id: \"opensource\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"project-title\",\n          children: \"Proyectos C\\xF3digo Abierto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repo-cards-div-main\",\n          children: repo.map((v, i) => /*#__PURE__*/_jsxDEV(GithubRepoCard, {\n            repo: v,\n            isDark: isDark\n          }, v.node.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"M\\xE1s Proyectos\",\n          className: \"project-button\",\n          href: socialMediaLinks.github,\n          newTab: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FailedLoading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Projects, \"w7h9C+mMgCDxw9bJ/KLG4ecHjmY=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/teky/src/tekyloFolio/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","useContext","Suspense","lazy","ApolloClient","gql","Button","openSource","socialMediaLinks","StyleContext","Loading","Projects","GithubRepoCard","FailedLoading","renderLoader","repo","setrepo","isDark","getRepoData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","setrepoFunction","data","user","pinnedItems","edges","catch","error","console","log","array","String","display","map","v","i","node","id","github"],"mappings":"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","sourcesContent":["import React, {\n  useState, useEffect, useContext, Suspense, lazy,\n} from 'react';\nimport ApolloClient, { gql } from 'apollo-boost';\n\nimport './Project.css';\nimport Button from '../../components/button/Button';\nimport { openSource, socialMediaLinks } from '../../portfolio';\nimport StyleContext from '../../contexts/StyleContext';\nimport Loading from '../loading/Loading';\n\nexport default function Projects() {\n  const GithubRepoCard = lazy(() => import('../../components/githubRepoCard/GithubRepoCard'));\n  const FailedLoading = () => null;\n  const renderLoader = () => <Loading />;\n  const [repo, setrepo] = useState([]);\n  // todo: remove useContex because is not supported\n  const { isDark } = useContext(StyleContext);\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: 'https://api.github.com/graphql',\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `,\n      })\n      .then((result) => {\n        setrepoFunction(result.data.user.pinnedItems.edges);\n        // console.log(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        setrepoFunction('Error');\n        console.log(\n          'Because of this Error, nothing is shown in place of Projects section. Projects section not configured',\n        );\n      });\n  }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (!(typeof repo === 'string' || repo instanceof String) && openSource.display) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <div className=\"main\" id=\"opensource\">\n          <h1 className=\"project-title\">Proyectos Código Abierto</h1>\n          <div className=\"repo-cards-div-main\">\n            {repo.map((v, i) => (\n              <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\n            ))}\n          </div>\n          <Button\n            text=\"Más Proyectos\"\n            className=\"project-button\"\n            href={socialMediaLinks.github}\n            newTab\n          />\n        </div>\n      </Suspense>\n    );\n  }\n  return <FailedLoading />;\n}\n"]},"metadata":{},"sourceType":"module"}