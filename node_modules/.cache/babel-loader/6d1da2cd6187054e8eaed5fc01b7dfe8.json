{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/teky/src/tekyloFolio/src/containers/twitter-embed/twitter.js\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useContext } from 'react';\nimport './twitter.css';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport Loading from '../loading/Loading';\nimport { twitterDetails } from '../../portfolio';\nimport StyleContext from '../../contexts/StyleContext';\n\nconst renderLoader = () => /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 28\n}, this);\n\nconst cantDisplayError = \"<div className='centerContent'><h2>Can't load? Check privacy protection settings</h2></div>\";\n\nfunction timeOut() {\n  setTimeout(() => {\n    if (!document.getElementById('twitter').innerHTML.includes('iframe')) {\n      document.getElementById('twitter').innerHTML = cantDisplayError;\n    }\n  }, 10000);\n}\n\nconst widthScreen = window.screen.width;\nexport default function Twitter() {\n  _s();\n\n  const {\n    isDark\n  } = useContext(StyleContext);\n\n  if (twitterDetails.userName) {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: renderLoader(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tw-main-div\",\n        id: \"twitter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centerContent\",\n          children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n            sourceType: \"profile\",\n            screenName: twitterDetails.userName,\n            options: {\n              height: 400,\n              width: {\n                widthScreen\n              }\n            },\n            placeholder: renderLoader(),\n            autoHeight: false,\n            borderColor: \"#fff\",\n            theme: isDark ? 'dark' : 'light',\n            noFooter: true,\n            onload: timeOut()\n          }, isDark ? '1' : '2', false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n\n_s(Twitter, \"ZZPd8S4Q8+HbJqQU/UnuUPtUjgA=\");\n\n_c = Twitter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Twitter\");","map":{"version":3,"sources":["/home/teky/src/tekyloFolio/src/containers/twitter-embed/twitter.js"],"names":["React","Suspense","useContext","TwitterTimelineEmbed","Loading","twitterDetails","StyleContext","renderLoader","cantDisplayError","timeOut","setTimeout","document","getElementById","innerHTML","includes","widthScreen","window","screen","width","Twitter","isDark","userName","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,eAAP;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,MAAMC,YAAY,GAAG,mBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,QAA3B;;AACA,MAAMC,gBAAgB,GAAG,6FAAzB;;AAEA,SAASC,OAAT,GAAmB;AACjBC,EAAAA,UAAU,CAAC,MAAM;AACf,QAAI,CAACC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,CAA6CC,QAA7C,CAAsD,QAAtD,CAAL,EAAsE;AACpEH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA+CL,gBAA/C;AACD;AACF,GAJS,EAIP,KAJO,CAAV;AAKD;;AACD,MAAMO,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcC,KAAlC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAalB,UAAU,CAACI,YAAD,CAA7B;;AAEA,MAAID,cAAc,CAACgB,QAAnB,EAA6B;AAC3B,wBACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEd,YAAY,EAAhC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,EAAE,EAAC,SAAhC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE,QAAC,oBAAD;AACE,YAAA,UAAU,EAAC,SADb;AAEE,YAAA,UAAU,EAAEF,cAAc,CAACgB,QAF7B;AAGE,YAAA,OAAO,EAAE;AAAEC,cAAAA,MAAM,EAAE,GAAV;AAAeJ,cAAAA,KAAK,EAAE;AAAEH,gBAAAA;AAAF;AAAtB,aAHX;AAIE,YAAA,WAAW,EAAER,YAAY,EAJ3B;AAKE,YAAA,UAAU,EAAE,KALd;AAME,YAAA,WAAW,EAAC,MANd;AAQE,YAAA,KAAK,EAAEa,MAAM,GAAG,MAAH,GAAY,OAR3B;AASE,YAAA,QAAQ,MATV;AAUE,YAAA,MAAM,EAAEX,OAAO;AAVjB,aAOOW,MAAM,GAAG,GAAH,GAAS,GAPtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AACD,SAAO,IAAP;AACD;;GA1BuBD,O;;KAAAA,O","sourcesContent":["import React, { Suspense, useContext } from 'react';\nimport './twitter.css';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport Loading from '../loading/Loading';\nimport { twitterDetails } from '../../portfolio';\nimport StyleContext from '../../contexts/StyleContext';\n\nconst renderLoader = () => <Loading />;\nconst cantDisplayError = \"<div className='centerContent'><h2>Can't load? Check privacy protection settings</h2></div>\";\n\nfunction timeOut() {\n  setTimeout(() => {\n    if (!document.getElementById('twitter').innerHTML.includes('iframe')) {\n      document.getElementById('twitter').innerHTML = cantDisplayError;\n    }\n  }, 10000);\n}\nconst widthScreen = window.screen.width;\n\nexport default function Twitter() {\n  const { isDark } = useContext(StyleContext);\n\n  if (twitterDetails.userName) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <div className=\"tw-main-div\" id=\"twitter\">\n          <div className=\"centerContent\">\n            <TwitterTimelineEmbed\n              sourceType=\"profile\"\n              screenName={twitterDetails.userName}\n              options={{ height: 400, width: { widthScreen } }}\n              placeholder={renderLoader()}\n              autoHeight={false}\n              borderColor=\"#fff\"\n              key={isDark ? '1' : '2'}\n              theme={isDark ? 'dark' : 'light'}\n              noFooter\n              onload={timeOut()}\n            />\n          </div>\n        </div>\n      </Suspense>\n    );\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}