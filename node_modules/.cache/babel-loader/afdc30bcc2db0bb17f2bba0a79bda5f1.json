{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/teky/src/porfolio/developerFolio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/teky/src/porfolio/developerFolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/teky/src/porfolio/developerFolio/src/containers/projects/Projects.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n        {\\n        user(login: \\\"\", \"\\\") {\\n          pinnedItems(first: 6, types: [REPOSITORY]) {\\n            totalCount\\n            edges {\\n              node {\\n                ... on Repository {\\n                  name\\n                  description\\n                  forkCount\\n                  stargazers {\\n                    totalCount\\n                  }\\n                  url\\n                  id\\n                  diskUsage\\n                  primaryLanguage {\\n                    name\\n                    color\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport GithubRepoCard from \"../../components/githubRepoCard/GithubRepoCard\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport { Fade } from \"react-reveal\";\nexport default function Projects() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        repo = _useState2[0],\n        setrepo = _useState2[1];\n\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: \"Bearer \".concat(atob(openSource.githubConvertedToken))\n          }\n        });\n      }\n    });\n    client.query({\n      query: gql(_templateObject(), openSource.githubUserName)\n    }).then(result => {\n      setrepoFunction(result.data.user.pinnedItems.edges);\n      console.log(result);\n    });\n  }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  return React.createElement(Fade, {\n    bottom: true,\n    duration: 1000,\n    distance: \"20px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main\",\n    id: \"opensource\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"project-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Open Source Projects\"), React.createElement(\"div\", {\n    className: \"repo-cards-div-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, repo.map((v, i) => {\n    return React.createElement(GithubRepoCard, {\n      repo: v,\n      key: v.node.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  })), React.createElement(Button, {\n    text: \"More Projects\",\n    className: \"project-button\",\n    href: socialMediaLinks.github,\n    newTab: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/teky/src/porfolio/developerFolio/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","ApolloClient","gql","GithubRepoCard","Button","openSource","socialMediaLinks","Fade","Projects","repo","setrepo","getRepoData","client","uri","request","operation","setContext","headers","authorization","atob","githubConvertedToken","query","githubUserName","then","result","setrepoFunction","data","user","pinnedItems","edges","console","log","array","map","v","i","node","id","github"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,iBAA7C;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA,oBACTT,QAAQ,CAAC,EAAD,CADC;AAAA;AAAA,QAC1BU,IAD0B;AAAA,QACpBC,OADoB;;AAGjCV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,WAAT,GAAuB;AACrB,UAAMC,MAAM,GAAG,IAAIX,YAAJ,CAAiB;AAC9BY,MAAAA,GAAG,EAAE,gCADyB;AAE9BC,MAAAA,OAAO,EAAEC,SAAS,IAAI;AACpBA,QAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,mBAAYC,IAAI,CAACd,UAAU,CAACe,oBAAZ,CAAhB;AADN;AADU,SAArB;AAKD;AAR6B,KAAjB,CAAf;AAWAR,IAAAA,MAAM,CACHS,KADH,CACS;AACLA,MAAAA,KAAK,EAAEnB,GAAF,oBAEUG,UAAU,CAACiB,cAFrB;AADA,KADT,EA+BGC,IA/BH,CA+BQC,MAAM,IAAI;AACdC,MAAAA,eAAe,CAACD,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiBC,WAAjB,CAA6BC,KAA9B,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,KAlCH;AAmCD;;AAED,WAASC,eAAT,CAAyBO,KAAzB,EAAgC;AAC9BtB,IAAAA,OAAO,CAACsB,KAAD,CAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,QAAQ,EAAE,IAAvB;AAA6B,IAAA,QAAQ,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,IAAI,CAACwB,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,WAAO,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAED,CAAtB;AAAyB,MAAA,GAAG,EAAEA,CAAC,CAACE,IAAF,CAAOC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CAFF,EAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,eAAd;AAA+B,IAAA,SAAS,EAAC,gBAAzC;AAA0D,IAAA,IAAI,EAAE/B,gBAAgB,CAACgC,MAAjF;AAAyF,IAAA,MAAM,EAAE,IAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADA,CADF;AAaD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport GithubRepoCard from \"../../components/githubRepoCard/GithubRepoCard\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport { Fade } from \"react-reveal\";\n\nexport default function Projects() {\n  const [repo, setrepo] = useState([]);\n\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${atob(openSource.githubConvertedToken)}`\n          }\n        });\n      }\n    });\n\n    client\n      .query({\n        query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `\n      })\n      .then(result => {\n        setrepoFunction(result.data.user.pinnedItems.edges);\n        console.log(result);\n      });\n  }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n    <div className=\"main\" id=\"opensource\">\n      <h1 className=\"project-title\">Open Source Projects</h1>\n      <div className=\"repo-cards-div-main\">\n        {repo.map((v, i) => {\n          return <GithubRepoCard repo={v} key={v.node.id} />;\n        })}\n      </div>\n      <Button text={\"More Projects\"} className=\"project-button\" href={socialMediaLinks.github} newTab={true} />\n    </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}