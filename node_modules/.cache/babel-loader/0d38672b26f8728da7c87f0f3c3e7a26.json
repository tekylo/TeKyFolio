{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/teky/src/tekyloFolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/home/teky/src/tekyloFolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n      {\\n        user(login:\\\"\",\"\\\") { \\n          name\\n          bio\\n          isHireable\\n          avatarUrl\\n          location\\n        }\\n    }\\n      \"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect,lazy,Suspense}from'react';import ApolloClient,{gql}from'apollo-boost';import{openSource}from'../../portfolio';import Contact from'../contact/Contact';import Loading from'../loading/Loading';var renderLoader=function renderLoader(){return/*#__PURE__*/_jsx(Loading,{});};var GithubProfileCard=/*#__PURE__*/lazy(function(){return import('../../components/githubProfileCard/GithubProfileCard');});export default function Profile(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),prof=_useState2[0],setrepo=_useState2[1];function setProfileFunction(array){setrepo(array);}function getProfileData(){var client=new ApolloClient({uri:'https://api.github.com/graphql',request:function request(operation){operation.setContext({headers:{authorization:\"Bearer \".concat(openSource.githubConvertedToken)}});}});client.query({query:gql(_templateObject(),openSource.githubUserName)}).then(function(result){setProfileFunction(result.data.user);}).catch(function(error){console.log(error);setProfileFunction('Error');console.log('Because of this Error Contact Section is Showed instead of Profile');openSource.showGithubProfile='false';});}useEffect(function(){if(openSource.showGithubProfile==='true'){getProfileData();}},[]);if(openSource.display&&openSource.showGithubProfile==='true'&&!(typeof prof==='string'||prof instanceof String)){return/*#__PURE__*/_jsx(Suspense,{fallback:renderLoader(),children:/*#__PURE__*/_jsx(GithubProfileCard,{prof:prof},prof.id)});}return/*#__PURE__*/_jsx(Contact,{});}","map":{"version":3,"sources":["/home/teky/src/tekyloFolio/src/containers/profile/Profile.js"],"names":["React","useState","useEffect","lazy","Suspense","ApolloClient","gql","openSource","Contact","Loading","renderLoader","GithubProfileCard","Profile","prof","setrepo","setProfileFunction","array","getProfileData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","data","user","catch","error","console","log","showGithubProfile","display","String","id"],"mappings":"qoBAAA,MAAOA,CAAAA,KAAP,EACEC,QADF,CACYC,SADZ,CACuBC,IADvB,CAC6BC,QAD7B,KAEO,OAFP,CAGA,MAAOC,CAAAA,YAAP,EAAuBC,GAAvB,KAAkC,cAAlC,CACA,OAASC,UAAT,KAA2B,iBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,sBAAM,KAAC,OAAD,IAAN,EAArB,CACA,GAAMC,CAAAA,iBAAiB,cAAGR,IAAI,CAAC,iBAAM,QAAO,sDAAP,CAAN,EAAD,CAA9B,CACA,cAAe,SAASS,CAAAA,OAAT,EAAmB,eACRX,QAAQ,CAAC,EAAD,CADA,wCACzBY,IADyB,eACnBC,OADmB,eAEhC,QAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CACjCF,OAAO,CAACE,KAAD,CAAP,CACD,CACD,QAASC,CAAAA,cAAT,EAA0B,CACxB,GAAMC,CAAAA,MAAM,CAAG,GAAIb,CAAAA,YAAJ,CAAiB,CAC9Bc,GAAG,CAAE,gCADyB,CAE9BC,OAAO,CAAE,iBAACC,SAAD,CAAe,CACtBA,SAAS,CAACC,UAAV,CAAqB,CACnBC,OAAO,CAAE,CACPC,aAAa,kBAAYjB,UAAU,CAACkB,oBAAvB,CADN,CADU,CAArB,EAKD,CAR6B,CAAjB,CAAf,CAWAP,MAAM,CACHQ,KADH,CACS,CACLA,KAAK,CAAEpB,GAAF,mBAESC,UAAU,CAACoB,cAFpB,CADA,CADT,EAcGC,IAdH,CAcQ,SAACC,MAAD,CAAY,CAChBd,kBAAkB,CAACc,MAAM,CAACC,IAAP,CAAYC,IAAb,CAAlB,CACD,CAhBH,EAiBGC,KAjBH,CAiBS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAlB,kBAAkB,CAAC,OAAD,CAAlB,CACAmB,OAAO,CAACC,GAAR,CAAY,oEAAZ,EACA5B,UAAU,CAAC6B,iBAAX,CAA+B,OAA/B,CACD,CAtBH,EAuBD,CACDlC,SAAS,CAAC,UAAM,CACd,GAAIK,UAAU,CAAC6B,iBAAX,GAAiC,MAArC,CAA6C,CAC3CnB,cAAc,GACf,CACF,CAJQ,CAIN,EAJM,CAAT,CAKA,GAAIV,UAAU,CAAC8B,OAAX,EAAsB9B,UAAU,CAAC6B,iBAAX,GAAiC,MAAvD,EAAiE,EAAE,MAAOvB,CAAAA,IAAP,GAAgB,QAAhB,EAA4BA,IAAI,WAAYyB,CAAAA,MAA9C,CAArE,CAA4H,CAC1H,mBACE,KAAC,QAAD,EAAU,QAAQ,CAAE5B,YAAY,EAAhC,uBACE,KAAC,iBAAD,EAAmB,IAAI,CAAEG,IAAzB,EAAoCA,IAAI,CAAC0B,EAAzC,CADF,EADF,CAKD,CACD,mBAAO,KAAC,OAAD,IAAP,CACD","sourcesContent":["import React, {\n  useState, useEffect, lazy, Suspense,\n} from 'react';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport { openSource } from '../../portfolio';\nimport Contact from '../contact/Contact';\nimport Loading from '../loading/Loading';\n\nconst renderLoader = () => <Loading />;\nconst GithubProfileCard = lazy(() => import('../../components/githubProfileCard/GithubProfileCard'));\nexport default function Profile() {\n  const [prof, setrepo] = useState([]);\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n  function getProfileData() {\n    const client = new ApolloClient({\n      uri: 'https://api.github.com/graphql',\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `,\n      })\n      .then((result) => {\n        setProfileFunction(result.data.user);\n      })\n      .catch((error) => {\n        console.log(error);\n        setProfileFunction('Error');\n        console.log('Because of this Error Contact Section is Showed instead of Profile');\n        openSource.showGithubProfile = 'false';\n      });\n  }\n  useEffect(() => {\n    if (openSource.showGithubProfile === 'true') {\n      getProfileData();\n    }\n  }, []);\n  if (openSource.display && openSource.showGithubProfile === 'true' && !(typeof prof === 'string' || prof instanceof String)) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <GithubProfileCard prof={prof} key={prof.id} />\n      </Suspense>\n    );\n  }\n  return <Contact />;\n}\n"]},"metadata":{},"sourceType":"module"}